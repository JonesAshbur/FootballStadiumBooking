<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkw.programmer.dao.RentalMapper">
  <resultMap id="BaseResultMap" type="com.zkw.programmer.domain.Rental">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="fee_rule" jdbcType="VARCHAR" property="feeRule" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="equipment_id" jdbcType="CHAR" property="equipmentId" />
    <result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
    <result column="equipment_photo" jdbcType="VARCHAR" property="equipmentPhoto" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, start_time, end_time, fee, fee_rule, num, create_time, user_id, `state`, equipment_id,
    equipment_name, equipment_photo, remark
  </sql>
  <select id="selectByExample" parameterType="com.zkw.programmer.domain.RentalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rental
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from rental
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rental
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zkw.programmer.domain.RentalExample">
    delete from rental
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zkw.programmer.domain.Rental">
    insert into rental (id, start_time, end_time,
      fee, fee_rule, num,
      create_time, user_id, `state`,
      equipment_id, equipment_name, equipment_photo,
      remark)
    values (#{id,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{fee,jdbcType=DECIMAL}, #{feeRule,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=CHAR}, #{state,jdbcType=INTEGER},
      #{equipmentId,jdbcType=CHAR}, #{equipmentName,jdbcType=VARCHAR}, #{equipmentPhoto,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zkw.programmer.domain.Rental">
    insert into rental
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="feeRule != null">
        fee_rule,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="equipmentName != null">
        equipment_name,
      </if>
      <if test="equipmentPhoto != null">
        equipment_photo,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="feeRule != null">
        #{feeRule,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=CHAR},
      </if>
      <if test="equipmentName != null">
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPhoto != null">
        #{equipmentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zkw.programmer.domain.RentalExample" resultType="java.lang.Integer">
    select count(*) from rental
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rental
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.feeRule != null">
        fee_rule = #{record.feeRule,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=CHAR},
      </if>
      <if test="record.equipmentName != null">
        equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentPhoto != null">
        equipment_photo = #{record.equipmentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rental
    set id = #{record.id,jdbcType=CHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      fee = #{record.fee,jdbcType=DECIMAL},
      fee_rule = #{record.feeRule,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=CHAR},
      `state` = #{record.state,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=CHAR},
      equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      equipment_photo = #{record.equipmentPhoto,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zkw.programmer.domain.Rental">
    update rental
    <set>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="feeRule != null">
        fee_rule = #{feeRule,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=CHAR},
      </if>
      <if test="equipmentName != null">
        equipment_name = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentPhoto != null">
        equipment_photo = #{equipmentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zkw.programmer.domain.Rental">
    update rental
    set start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      fee = #{fee,jdbcType=DECIMAL},
      fee_rule = #{feeRule,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=CHAR},
      `state` = #{state,jdbcType=INTEGER},
      equipment_id = #{equipmentId,jdbcType=CHAR},
      equipment_name = #{equipmentName,jdbcType=VARCHAR},
      equipment_photo = #{equipmentPhoto,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
